{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hamza/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupsDetails from \"../../components/meetups/MeetupDetails\";\nimport { Head } from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst DetailsPage = ({\n  meetup\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse out meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupsDetails, {\n      title: meetup.title,\n      image: meetup.image,\n      address: meetup.address,\n      description: meetup.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\n  const db = client.db();\n  const meetupsColl = db.collection('meetups');\n  const result = await meetupsColl.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: result.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\n  const db = client.db();\n  const meetupsColl = db.collection('meetups');\n  const result = await meetupsColl.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetup: {\n        id: result._id.toString(),\n        title: result.title,\n        address: result.address,\n        description: result.description,\n        image: result.image\n      }\n    }\n  };\n}\nexport default DetailsPage;","map":{"version":3,"sources":["/home/hamza/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupsDetails","Head","MongoClient","ObjectId","DetailsPage","meetup","title","image","address","description","getStaticPaths","client","connect","db","meetupsColl","collection","result","find","_id","toArray","close","fallback","paths","map","m","params","meetupId","toString","getStaticProps","context","findOne","props","id"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,wCAA3B;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,WAAW,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAkB;AAClC,sBAAO;AAAA,4BACH,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAKH,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAGA,MAAM,CAACC,KAA/B;AAAuC,MAAA,KAAK,EAAGD,MAAM,CAACE,KAAtD;AAA8D,MAAA,OAAO,EAAGF,MAAM,CAACG,OAA/E;AAAyF,MAAA,WAAW,EAAGH,MAAM,CAACI;AAA9G;AAAA;AAAA;AAAA;AAAA,YALG;AAAA,kBAAP;AAMH,CAPD;;AASA,OAAO,eAAeC,cAAf,GAAiC;AACpC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAqB,mCAArB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAe,SAAf,CAApB;AACA,QAAMC,MAAM,GAAG,MAAMF,WAAW,CAACG,IAAZ,CAAkB,EAAlB,EAAsB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAtB,EAAmCC,OAAnC,EAArB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,MAAM,CAACO,GAAP,CAAYC,CAAC,KAAM;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,CAAC,CAACN,GAAF,CAAMS,QAAN;AAAZ;AAAV,KAAN,CAAb;AAFJ,GAAP;AAIH;AACD,OAAO,eAAeC,cAAf,CAAgCC,OAAhC,EAA0C;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAqB,mCAArB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAe,SAAf,CAApB;AACA,QAAMC,MAAM,GAAG,MAAMF,WAAW,CAACgB,OAAZ,CAAqB;AAAEZ,IAAAA,GAAG,EAAEf,QAAQ,CAAEuB,QAAF;AAAf,GAArB,CAArB;AACAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHW,IAAAA,KAAK,EAAE;AACH1B,MAAAA,MAAM,EAAE;AACJ2B,QAAAA,EAAE,EAAEhB,MAAM,CAACE,GAAP,CAAWS,QAAX,EADA;AAEJrB,QAAAA,KAAK,EAAEU,MAAM,CAACV,KAFV;AAGJE,QAAAA,OAAO,EAAEQ,MAAM,CAACR,OAHZ;AAIJC,QAAAA,WAAW,EAAEO,MAAM,CAACP,WAJhB;AAKJF,QAAAA,KAAK,EAAES,MAAM,CAACT;AALV;AADL;AADJ,GAAP;AAWH;AACD,eAAeH,WAAf","sourcesContent":["import MeetupsDetails from \"../../components/meetups/MeetupDetails\";\nimport { Head } from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst DetailsPage = ( { meetup } ) => {\n    return <>\n        <Head>\n            <title>Meetups</title>\n            <meta name=\"description\" content=\"Browse out meetups\" />\n        </Head>\n        <MeetupsDetails title={ meetup.title } image={ meetup.image } address={ meetup.address } description={ meetup.description } /></>;\n};\n\nexport async function getStaticPaths () {\n    const client = await MongoClient.connect( 'mongodb://localhost:27017/meetups' );\n    const db = client.db();\n\n    const meetupsColl = db.collection( 'meetups' );\n    const result = await meetupsColl.find( {}, { _id: 1 } ).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths: result.map( m => ( { params: { meetupId: m._id.toString() } } ) )\n    };\n}\nexport async function getStaticProps ( context ) {\n    const meetupId = context.params.meetupId;\n    const client = await MongoClient.connect( 'mongodb://localhost:27017/meetups' );\n    const db = client.db();\n\n    const meetupsColl = db.collection( 'meetups' );\n    const result = await meetupsColl.findOne( { _id: ObjectId( meetupId ) } );\n    client.close();\n    return {\n        props: {\n            meetup: {\n                id: result._id.toString(),\n                title: result.title,\n                address: result.address,\n                description: result.description,\n                image: result.image\n            }\n        }\n    };\n}\nexport default DetailsPage;"]},"metadata":{},"sourceType":"module"}