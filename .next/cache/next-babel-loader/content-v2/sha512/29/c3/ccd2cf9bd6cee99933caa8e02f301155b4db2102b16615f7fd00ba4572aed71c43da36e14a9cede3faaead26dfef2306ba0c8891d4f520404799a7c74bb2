{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { MongoClient } from \"mongodb\";\nexport async function handler(req, res) {\n  if (req.method === \"GET\") {\n    const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\n    const db = client.db();\n    const meetupsColl = db.collection('meetups');\n    const result = meetupsColl.find().toArray();\n    const meetups = result.map(m => {\n      return _objectSpread({\n        id: m._id\n      }, m);\n    });\n    res.status(201).json(meetups);\n  }\n}","map":{"version":3,"sources":["/home/hamza/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/api/meetups.js"],"names":["MongoClient","handler","req","res","method","client","connect","db","meetupsColl","collection","result","find","toArray","meetups","map","m","id","_id","status","json"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAO,eAAeC,OAAf,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAoC;AACvC,MAAKD,GAAG,CAACE,MAAJ,KAAe,KAApB,EACA;AACI,UAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CAAqB,mCAArB,CAArB;AACA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAe,SAAf,CAApB;AACA,UAAMC,MAAM,GAAGF,WAAW,CAACG,IAAZ,GAAmBC,OAAnB,EAAf;AACA,UAAMC,OAAO,GAAGH,MAAM,CAACI,GAAP,CAAYC,CAAC,IAAI;AAC7B;AACIC,QAAAA,EAAE,EAAED,CAAC,CAACE;AADV,SAEOF,CAFP;AAIH,KALe,CAAhB;AAMAZ,IAAAA,GAAG,CAACe,MAAJ,CAAY,GAAZ,EAAkBC,IAAlB,CAAwBN,OAAxB;AACH;AACJ","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nexport async function handler ( req, res ) {\n    if ( req.method === \"GET\" )\n    {\n        const client = await MongoClient.connect( 'mongodb://localhost:27017/meetups' );\n        const db = client.db();\n\n        const meetupsColl = db.collection( 'meetups' );\n        const result = meetupsColl.find().toArray();\n        const meetups = result.map( m => {\n            return {\n                id: m._id,\n                ...m\n            };\n        } );\n        res.status( 201 ).json( meetups );\n    }\n}"]},"metadata":{},"sourceType":"module"}