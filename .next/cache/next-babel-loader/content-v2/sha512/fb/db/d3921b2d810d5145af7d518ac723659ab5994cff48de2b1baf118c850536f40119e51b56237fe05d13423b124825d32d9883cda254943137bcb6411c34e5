{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hamza/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupsDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst DetailsPage = ({\n  meetup\n}) => {\n  return /*#__PURE__*/_jsxDEV(MeetupsDetails, {\n    title: meetup.title,\n    image: meetup.image,\n    address: meetup.address,\n    description: meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\n  const db = client.db();\n  const meetupsColl = db.collection('meetups');\n  const result = await meetupsColl.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: result.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb://localhost:27017/meetups');\n  const db = client.db();\n  const meetupsColl = db.collection('meetups');\n  const result = await meetupsColl.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetup: result\n    }\n  };\n}\nexport default DetailsPage;","map":{"version":3,"sources":["/home/hamza/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupsDetails","MongoClient","ObjectId","DetailsPage","meetup","title","image","address","description","getStaticPaths","client","connect","db","meetupsColl","collection","result","find","_id","toArray","close","fallback","paths","map","m","params","meetupId","toString","getStaticProps","context","findOne","props"],"mappings":";;AAAA,OAAOA,cAAP,MAA2B,wCAA3B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,WAAW,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAkB;AAClC,sBAAO,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAGA,MAAM,CAACC,KAA/B;AAAuC,IAAA,KAAK,EAAGD,MAAM,CAACE,KAAtD;AAA8D,IAAA,OAAO,EAAGF,MAAM,CAACG,OAA/E;AAAyF,IAAA,WAAW,EAAGH,MAAM,CAACI;AAA9G;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CAHD;;AAKA,OAAO,eAAeC,cAAf,GAAiC;AACpC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAqB,mCAArB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAe,SAAf,CAApB;AACA,QAAMC,MAAM,GAAG,MAAMF,WAAW,CAACG,IAAZ,CAAkB,EAAlB,EAAsB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAtB,EAAmCC,OAAnC,EAArB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,MAAM,CAACO,GAAP,CAAYC,CAAC,KAAM;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,CAAC,CAACN,GAAF,CAAMS,QAAN;AAAZ;AAAV,KAAN,CAAb;AAFJ,GAAP;AAIH;AACD,OAAO,eAAeC,cAAf,CAAgCC,OAAhC,EAA0C;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAqB,mCAArB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAe,SAAf,CAApB;AACA,QAAMC,MAAM,GAAG,MAAMF,WAAW,CAACgB,OAAZ,CAAqB;AAAEZ,IAAAA,GAAG,EAAEf,QAAQ,CAAEuB,QAAF;AAAf,GAArB,CAArB;AACAf,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHW,IAAAA,KAAK,EAAE;AACH1B,MAAAA,MAAM,EAAEW;AADL;AADJ,GAAP;AAKH;AACD,eAAeZ,WAAf","sourcesContent":["import MeetupsDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst DetailsPage = ( { meetup } ) => {\n    return <MeetupsDetails title={ meetup.title } image={ meetup.image } address={ meetup.address } description={ meetup.description }\n    />;\n};\n\nexport async function getStaticPaths () {\n    const client = await MongoClient.connect( 'mongodb://localhost:27017/meetups' );\n    const db = client.db();\n\n    const meetupsColl = db.collection( 'meetups' );\n    const result = await meetupsColl.find( {}, { _id: 1 } ).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths: result.map( m => ( { params: { meetupId: m._id.toString() } } ) )\n    };\n}\nexport async function getStaticProps ( context ) {\n    const meetupId = context.params.meetupId;\n    const client = await MongoClient.connect( 'mongodb://localhost:27017/meetups' );\n    const db = client.db();\n\n    const meetupsColl = db.collection( 'meetups' );\n    const result = await meetupsColl.findOne( { _id: ObjectId( meetupId ) } );\n    client.close();\n    return {\n        props: {\n            meetup: result\n        }\n    };\n}\nexport default DetailsPage;"]},"metadata":{},"sourceType":"module"}