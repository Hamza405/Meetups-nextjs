{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/hamza/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupsDetails from \"../../components/meetups/MeetupDetails\";\n\nvar DetailsPage = function DetailsPage(_ref) {\n  var meetup = _ref.meetup;\n  return /*#__PURE__*/_jsxDEV(MeetupsDetails, {\n    title: meetup.title,\n    image: meetup.image,\n    address: meetup.address,\n    description: meetup.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, _this);\n};\n\n_c = DetailsPage;\nexport var __N_SSG = true;\nexport default DetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailsPage\");","map":{"version":3,"sources":["/home/hamza/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupsDetails","DetailsPage","meetup","title","image","address","description"],"mappings":";;;;;AAAA,OAAOA,cAAP,MAA2B,wCAA3B;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAdC,MAAc,QAAdA,MAAc;AAClC,sBAAO,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAGA,MAAM,CAACC,KAA/B;AAAuC,IAAA,KAAK,EAAGD,MAAM,CAACE,KAAtD;AAA8D,IAAA,OAAO,EAAGF,MAAM,CAACG,OAA/E;AAAyF,IAAA,WAAW,EAAGH,MAAM,CAACI;AAA9G;AAAA;AAAA;AAAA;AAAA,WAAP;AAEH,CAHD;;KAAML,W;;AA+BN,eAAeA,WAAf","sourcesContent":["import MeetupsDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst DetailsPage = ( { meetup } ) => {\n    return <MeetupsDetails title={ meetup.title } image={ meetup.image } address={ meetup.address } description={ meetup.description }\n    />;\n};\n\nexport async function getStaticPaths () {\n    const client = await MongoClient.connect( 'mongodb://localhost:27017/meetups' );\n    const db = client.db();\n\n    const meetupsColl = db.collection( 'meetups' );\n    const result = await meetupsColl.find( {}, { _id: 1 } ).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths: result.map( m => ( { params: { meetupId: m._id.toString() } } ) )\n    };\n}\nexport async function getStaticProps ( context ) {\n    const meetupId = context.params.meetupId;\n    const client = await MongoClient.connect( 'mongodb://localhost:27017/meetups' );\n    const db = client.db();\n\n    const meetupsColl = db.collection( 'meetups' );\n    const result = await meetupsColl.findOne( { _id: ObjectId( meetupId ) } );\n    client.close();\n    return {\n        props: {\n            meetup: result\n        }\n    };\n}\nexport default DetailsPage;"]},"metadata":{},"sourceType":"module"}